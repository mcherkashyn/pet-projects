name: Test inputs Terraform deployment

on: 
    workflow_dispatch:
          inputs:
            test_input:
              description: 'Test VPC name'     
              required: true
              default: ''
            tags:
              description: 'Test scenario tags' 

# on:
#   push:
#     branches:
#       - main

jobs:

  build-services:
    env:
      AWS_REGION: us-east-1

    runs-on: ubuntu-latest
    #continue-on-error: true
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
            terraform_version: 1.3.9
      
      #deploy the test VPC
    - name: Terraform app init
      run: | 
        terraform init -input=false
      working-directory: "./test_terraform/"

    - name: Terraform app plan
      run: |
        terraform plan -var="vpc_name=${{ github.event.inputs.test_input }}"
      working-directory: "./test_terraform/"

    - name: Terraform app apply 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
      run: | 
        terraform apply -auto-approve -input=false -var="vpc_name=${{ github.event.inputs.test_input }}"
      working-directory: "./test_terraform/"


#      #destroy the app
#    - name: Terraform app init
#      run: | 
#        terraform init -input=false
#      working-directory: "./ci_cd_with_aws/"
#
#    - name: Terraform app plan
#      run: |
#        terraform plan
#      working-directory: "./ci_cd_with_aws/"
#
#    - name: Terraform app destroy 
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
#      run: | 
#        terraform destroy -auto-approve -input=false
#      working-directory: "./ci_cd_with_aws/"
