name: cicd
on:
  push:
    branches:
      - main
jobs:
  build-services:
    env:
      AWS_REGION: us-east-1

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r ci_cd_with_aws/flaskapp/requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
            terraform_version: 1.3.9

    - name: Terraform backend init, plan and apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          echo "** Running Terraform Init**"
          terraform init -input=false
      
          echo "** Running Terraform Plan**"
          terraform plan
          
          echo "** Running Terraform Apply**"
          terraform apply -auto-approve -input=false
          continue-on-error: true

    - name: Step 3
      run: echo "This step will only run if Step 2 fails"

      working-directory: "./ci_cd_with_aws/backend"


  update-infrastructure:
    needs: [build-services]
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r ci_cd_with_aws/flaskapp/requirements.txt

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
            terraform_version: 1.3.9

    - name: Terraform init, plan and apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          echo "** Running Terraform Init**"
          terraform init -input=false
      
          echo "** Running Terraform Plan**"
          terraform plan
          
          echo "** Running Terraform Apply**"
          terraform apply -auto-approve -input=false
      working-directory: "./ci_cd_with_aws"


#    - name: Terraform init, plan and destroy
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#          echo "** Running Terraform Init**"
#          terraform init -input=false
#      
#          echo "** Running Terraform Plan**"
#          terraform plan
#          
#          echo "** Running Terraform Apply**"
#          terraform destroy -auto-approve -input=false
#      working-directory: "./ci_cd_with_aws"
